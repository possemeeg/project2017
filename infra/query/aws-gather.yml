
---
- name: find hosts
  hosts: localhost
  connection: local
  gather_facts: yes
  tasks:
  - name: query
    ec2_instance_facts:
        region: eu-west-1
        aws_access_key: "{{aws_access_key}}"
        aws_secret_key: "{{aws_secret_key}}"
        filters:
            "tag:Project": p2017
            "instance-state-name": running
    register: ec2_facts

  - name: Create ansible hosts file
    copy:
      dest: ../aws-hosts.yml
      content: |
          ---
          # generated by ansible {{ansible_date_time.date}} {{ansible_date_time.time}}
          engine:
              hosts:
          {% for item in ec2_facts.instances if item.tags.Name.startswith('engine')%}
                  {{item.tags.Name}}:
                      ansible_host: aws_{{item.tags.Name}}
          {% endfor %}
          webdoor:
              hosts:
          {% for item in ec2_facts.instances if item.tags.Name.startswith('webdoor')%}
                  {{item.tags.Name}}:
                      ansible_host: aws_{{item.tags.Name}}
          {% endfor %}

  - name: Create ssh config file
    copy:
      dest: ~/.ssh/aws_ssh_config
      content: |
          # generated by ansible {{ansible_date_time.date}} {{ansible_date_time.time}}
          {% for item in ec2_facts.instances %}
          Host aws_{{item.tags.Name}}
             HostName {{item.public_ip_address}}
             User ec2-user
             IdentityFile {{aws_identity_file}}
             StrictHostKeyChecking no
          {% endfor %}

  - name: Create web ip address info file
    copy:
      dest: ./webdoors.txt
      content: |
          ---
          # generated by ansible {{ansible_date_time.date}} {{ansible_date_time.time}}
          {% for item in ec2_facts.instances if item.tags.Name.startswith('webdoor')%}
          {{item.tags.Name}}: {{item.public_ip_address}}
          {% endfor %}

  - name: Create web ip address info file
    copy:
      dest: ./engines.txt
      content: |
          ---
          # generated by ansible {{ansible_date_time.date}} {{ansible_date_time.time}}
          {% for item in ec2_facts.instances if item.tags.Name.startswith('engine')%}
          {{item.tags.Name}}: {{item.public_ip_address}}
          {% endfor %}
